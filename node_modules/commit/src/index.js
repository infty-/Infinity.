var Cache = require('cache-args');
var CommitObj = require('commit-obj');
var Emitter = require('eventemitter2').EventEmitter2;
var help = require('help');
help.global.globalize();
globalize(help.propConstr);
globalize(help.func, Function.prototype);
globalize(help.Func, Function);

var Commiter = module.exports = Function.create(function () {
	Emitter.call(this, {
	    wildcard: true,
	    newListener: true
	});
    
	this.forObj = Cache(CommitObj.bind({}, this)); // !({} instanceof CommitObj) -> `constr` creates new `CommitObj` instance
    }, undefined, {
	prototype: Member(Object.create(Emitter.prototype))
    });

this.emit();